@using FidgetSpinnerWASM2.Models
@* Settings *@
<MudDialog  Visible="settingsVisible" VisibleChanged="settingsVisibleChanged" Options="@(new() { FullWidth = true })">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Edit" Class="mr-3" /> Simulation Settings
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudGrid>
            <MudItem md="12">
                <MudCheckBox Value="realTimeSim" ValueChanged="realTimeSimChanged" Label="Real time update"></MudCheckBox>
                <MudCheckBox Value="showLabels" ValueChanged="showLabelsChanged" Label="Display Labels"></MudCheckBox>
                <MudItem>
                    <MudSlider T="float" Value="@sim.mu" ValueChanged="(v) => sim.mu = v" Min="0" Max="1F" Step="0.00000001F">Permeability of free space (T/A) = @sim.mu</MudSlider>
                </MudItem>
            </MudItem>
            <MudItem md="12">
            </MudItem>
        </MudGrid>

    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="() => { settingsVisible = false;  settingsVisibleChanged.InvokeAsync(settingsVisible); } " Class="px-10">Close</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [Parameter]
    public bool settingsVisible { get; set; }
    [Parameter]
    public EventCallback<bool> settingsVisibleChanged { get; set; }
    [Parameter]
    public bool realTimeSim { get; set; }
    [Parameter]
    public EventCallback<bool> realTimeSimChanged { get; set; }
    [Parameter]
    public bool showLabels { get; set; }
    [Parameter]
    public EventCallback<bool> showLabelsChanged { get; set; }

    [Parameter]
    public Simulation sim { get; set; }
}
